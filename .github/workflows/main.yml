name: Deploy Vue App to Ubuntu Server using Docker

on:
  push:
    branches:
      - master

env:
  SERVER_HOST: 211.117.197.184
  SERVER_SSH_USER: parkhaein
  PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  DOCKER_IMAGE_NAME: kanepark/vue-app

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build the Vue app
        run: npm run build

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy-to-ubuntu-server:
    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Ubuntu Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 234
          script: |
            LOG_DIR="/home/ubuntu/app-logs"
            mkdir -p $LOG_DIR
            touch $LOG_DIR/app.log

            # 기존 Docker 리소스 정리
            sudo docker container prune -f
            sudo docker image prune -af
            sudo docker volume prune -f
            sudo docker system prune -af --volumes

            # 기존 컨테이너 종료 및 삭제
            CONTAINER_ID=$(sudo docker ps -q --filter "publish=80-8080")
            if [ ! -z "$CONTAINER_ID" ]; then
              sudo docker stop $CONTAINER_ID
              sudo docker rm $CONTAINER_ID
            fi

            # Docker 이미지 업데이트 및 컨테이너 실행
            sudo docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest
            sudo docker run --name app-container -d -p 60:60 -e TZ=Asia/Seoul \
              -v $LOG_DIR/app.log:/app/logs/app.log ${{ env.DOCKER_IMAGE_NAME }}:latest
